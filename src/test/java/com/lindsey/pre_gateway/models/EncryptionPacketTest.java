package com.lindsey.pre_gateway.models;

import com.lindsey.pre_gateway.ProxyReencryptionGatewayApplication;
import com.lindsey.pre_gateway.api.key.generate.GenerateReencryption;
import nics.crypto.proxy.afgh.AFGHProxyReEncryption;
import org.junit.Test;

import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import java.security.NoSuchAlgorithmException;
import java.util.Optional;

public class EncryptionPacketTest {

  @Test
  public void getFirstLevelEncryption() throws Exception {
    KeyPair keyPair = new KeyPair();
    keyPair.generateSecretKey();
    keyPair.generatePublicKey();
    EncryptionPacket packet = new EncryptionPacket(
      keyPair,
      "Hello World\n".getBytes()
    );
    packet.getFirstLevelEncryption();
  }

  @Test
  public void getFirstLevelDecryption() throws Exception {
    KeyPair keyPair = new KeyPair();
    keyPair.generateSecretKey();
    keyPair.generatePublicKey();
    String input = "Hello World\n";
    EncryptionPacket packet = new EncryptionPacket(
      keyPair,
      input.getBytes()
    );
    byte[] encrypted = packet.getFirstLevelEncryption();

    packet = new EncryptionPacket(
      keyPair,
      encrypted
    );
    byte[] decrypted = packet.getFirstLevelDecryption();

    byte[] inputBytes = input.getBytes();
    for (int i = 0; i < inputBytes.length; i++)
      assert inputBytes[i] == decrypted[i];
  }

  @Test
  public void getSecondLevelEncryption() throws Exception {
    KeyPair keyPair = new KeyPair();
    keyPair.generateSecretKey();
    keyPair.generatePublicKey();
    EncryptionPacket packet = new EncryptionPacket(
      keyPair,
      "Hello World\n".getBytes()
    );
    packet.getSecondLevelEncryption();
  }

  @Test
  public void getSecondLevelDecryption() throws Exception {
    KeyPair keyPair = new KeyPair();
    keyPair.generateSecretKey();
    keyPair.generatePublicKey();

    String input = "Hello World\n";
    EncryptionPacket packet = new EncryptionPacket(
      keyPair,
      input.getBytes()
    );
    byte[] encrypted = packet.getSecondLevelEncryption();

    packet = new EncryptionPacket(
      keyPair,
      encrypted
    );
    byte[] decrypted = packet.getSecondLevelDecryption();

    byte[] inputBytes = input.getBytes();
    for (int i = 0; i < inputBytes.length; i++)
      assert inputBytes[i] == decrypted[i];
  }

  @Test
  public void e2e() throws Exception {
    // Generate keys for a, b
    KeyPair delegator = new KeyPair();
    delegator.generateSecretKey();
    delegator.generatePublicKey();

    byte[][] delegatorBytes = new byte[][]{
      delegator.getSecretKey().toBytes(),
      delegator.getPublicKey().toBytes()
    };

    KeyPair delegatee = new KeyPair();
    delegatee.generateSecretKey();
    delegatee.generatePublicKey();

    byte[][] delegateeBytes = new byte[][]{
      delegator.getSecretKey().toBytes(),
      delegator.getPublicKey().toBytes()
    };

    String input = "";

    EncryptionPacket packet;

    // Encrypt m with pk_a
    packet = new EncryptionPacket(
      KeyPair.fromBytes(Optional.empty(), Optional.of(delegatorBytes[1])),
      input.getBytes()
    );
    byte[] secondLevelEncryption = packet.getFirstLevelEncryption();

    // Decrypt m with sk_a
    packet = new EncryptionPacket(
      KeyPair.fromBytes(Optional.of(delegatorBytes[0]), Optional.empty()),
      secondLevelEncryption
    );
    byte[] secondLevelDecryption = packet.getFirstLevelDecryption();

    byte[] inputBytes = input.getBytes();
    for (int i = 0; i < inputBytes.length; i++)
      assert inputBytes[i] == secondLevelDecryption[i];

    // Generate re_(a -> b)
    byte[] reencryptionKey =
      new GenerateReencryption(KeyPair.fromBytes(
        Optional.of(delegatorBytes[0]),
        Optional.of(delegateeBytes[1])
      )).getReencryptionKey();

    // Reencrypt
    packet = new EncryptionPacket(
      KeyPair.fromBytes(
        Optional.empty(),
        Optional.of(reencryptionKey)
      ),
      secondLevelEncryption
    );
    byte[] reencrypted = packet.getReencryption();

    // Decrypt m with sk_b
    packet = new EncryptionPacket(
      KeyPair.fromBytes(Optional.of(delegateeBytes[0]), Optional.empty()),
      reencrypted
    );
    byte[] decrypted = packet.getFirstLevelDecryption();

    for (int i = 0; i < inputBytes.length; i++)
      assert inputBytes[i] == decrypted[i];

    KeyGenerator KeyGen = null;
    try {
      KeyGen = KeyGenerator.getInstance("AES");
    } catch (NoSuchAlgorithmException e) {
      e.printStackTrace();
    }

    //KeyGen.init(128);

    SecretKey symmetricKey = KeyGen.generateKey();

    byte[] symmetricKeyBytes = symmetricKey.getEncoded();
    byte[] encryptDecrypt = strip(AFGHProxyReEncryption.firstLevelDecryption(
      AFGHProxyReEncryption.firstLevelEncryption(
        symmetricKeyBytes,
        delegator.getPublicKey().toBytes(),
        ProxyReencryptionGatewayApplication.globalParameters
      ),
      delegator.getSecretKey().toBytes(),
      ProxyReencryptionGatewayApplication.globalParameters
    ));

    for (int i = 0; i < symmetricKeyBytes.length; i++)
      assert symmetricKeyBytes[i] == encryptDecrypt[i];
  }

  private byte[] strip(byte[] in) {
    // Find last index
    int last = in.length - 1;
    while (last > 0 && in[last] == 0) last--;

    // Find first index
    int index = 0;
    while (index < in.length && index <= last && in[index] == 0) index++;

    byte[] out = new byte[last - index + 1];
    while (index <= last) {
      out[out.length - (last - index) - 1] = in[index];
      index++;
    }

    return out;
  }

}
